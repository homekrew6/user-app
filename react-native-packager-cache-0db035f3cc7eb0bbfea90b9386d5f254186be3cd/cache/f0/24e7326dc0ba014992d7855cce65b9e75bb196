var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/user-app/node_modules/react-native-facebook-login/index.android.js';

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactNative = require('react-native');

var _itypeof = require('itypeof');

var _itypeof2 = _interopRequireDefault(_itypeof);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  FBLogin: {
    displayName: 'FBLogin'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/nits-58/Desktop/project/anup/loopback/user-app/node_modules/react-native-facebook-login/index.android.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var FBLoginManager = _reactNative.NativeModules.MFBLoginManager;

var styles = _reactNative.StyleSheet.create({
  login: {
    flex: 1,
    backgroundColor: '#3B5998',
    padding: 10,
    alignItems: 'center'
  },
  whiteFont: {
    color: 'white'
  }
});

var statics = {
  loginText: 'Login with Facebook',
  logoutText: 'Logout from Facebook'
};

var FBLogin = _wrapComponent('FBLogin')((_temp = _class = function (_Component) {
  _inherits(FBLogin, _Component);

  function FBLogin(props) {
    _classCallCheck(this, FBLogin);

    var _this = _possibleConstructorReturn(this, (FBLogin.__proto__ || Object.getPrototypeOf(FBLogin)).call(this, props));

    _this.login = _this.login.bind(_this);
    _this.logout = _this.logout.bind(_this);
    _this._handleEvent = _this._handleEvent.bind(_this);
    _this._getButtonView = _this._getButtonView.bind(_this);
    _this.getChildContext = _this.getChildContext.bind(_this);
    _this._onFacebookPress = _this._onFacebookPress.bind(_this);

    _this.state = {
      statics: statics,
      isLoggedIn: false,
      buttonText: statics.loginText
    };
    return _this;
  }

  _createClass(FBLogin, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      FBLoginManager.setLoginBehavior(this.props.loginBehavior).then(function (behaviour) {
        console.log('FbLogin: using ' + behaviour.name + ' behaviour', behaviour);
      });
      FBLoginManager.getCredentials(function (err, data) {
        if (!_this2.mounted) return;
        if (data && (0, _itypeof2.default)(data.credentials) === 'object' && (0, _itypeof2.default)(data.credentials.token) === 'string' && data.credentials.token.length > 0) {
          _this2.setState({ isLoggedIn: true, buttonText: _this2.state.statics.logoutText });
        } else {
          _this2.setState({ isLoggedIn: false, buttonText: _this2.state.statics.loginText });
        }
        _this2._handleEvent(null, data);
      });
      this.mounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.mounted = false;
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        isLoggedIn: this.state.isLoggedIn,
        login: this.login,
        logout: this.logout,
        props: this.props
      };
    }
  }, {
    key: 'login',
    value: function login(permissions) {
      var _this3 = this;

      FBLoginManager.loginWithPermissions(permissions || this.props.permissions, function (err, data) {
        return _this3._handleEvent(err, data);
      });
    }
  }, {
    key: 'logout',
    value: function logout() {
      var _this4 = this;

      FBLoginManager.logout(function (err, data) {
        return _this4._handleEvent(err, data);
      });
    }
  }, {
    key: '_handleEvent',
    value: function _handleEvent(e, data) {
      var result = e || data;
      if (result.type === 'success' && result.profile) {
        try {
          result.profile = JSON.parse(result.profile);
        } catch (err) {
          console.warn('Could not parse facebook profile: ', result.profile);
          console.error(err);
        }
      }

      if (result.eventName === 'onLogin' || result.eventName === 'onLoginFound') {
        this.setState({ isLoggedIn: true, buttonText: this.state.statics.logoutText });
      } else if (result.eventName === 'onLogout') {
        this.setState({ isLoggedIn: false, buttonText: this.state.statics.loginText });
      }

      if (result.eventName && this.props.hasOwnProperty(result.eventName)) {
        var event = result.eventName;
        delete result.eventName;
        console.log('Triggering \'%s\' event', event);
        this.props[event](result);
      } else {
        console.log('\'%s\' Event is not defined or recognized', result.eventName);
      }
    }
  }, {
    key: '_onFacebookPress',
    value: function _onFacebookPress() {
      var permissions = [];
      if ((0, _itypeof2.default)(this.props.permissions) === 'array') {
        permissions = this.props.permissions;
      }

      if (this.state.isLoggedIn) {
        this.logout();
      } else {
        this.login(permissions);
      }
    }
  }, {
    key: '_getButtonView',
    value: function _getButtonView() {
      var buttonText = this.props.facebookText ? this.props.facebookText : this.state.buttonText;
      return this.props.buttonView ? this.props.buttonView : _react3.default.createElement(
        _reactNative.View,
        { style: [styles.login, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 148
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          { style: [styles.whiteFont, this.fontStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 149
            }
          },
          ' ',
          buttonText,
          ' '
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.TouchableHighlight,
        { onPress: this._onFacebookPress, underlayColor: this.props.onClickColor, __source: {
            fileName: _jsxFileName,
            lineNumber: 156
          }
        },
        _react3.default.createElement(
          _reactNative.View,
          { style: [this.props.containerStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 157
            }
          },
          this._getButtonView()
        )
      );
    }
  }]);

  return FBLogin;
}(_react2.Component), _class.childContextTypes = {
  isLoggedIn: _propTypes2.default.bool,
  login: _propTypes2.default.func,
  logout: _propTypes2.default.func,
  props: _propTypes2.default.shape({})
}, _temp));

module.exports = {
  FBLogin: FBLogin,
  FBLoginManager: FBLoginManager
};