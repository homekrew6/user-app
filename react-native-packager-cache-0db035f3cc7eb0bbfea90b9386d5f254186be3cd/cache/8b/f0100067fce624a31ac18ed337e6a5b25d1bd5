Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/service/incrimentDecrimentCompt.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _reactNative = require('react-native');

var _Entypo = require('react-native-vector-icons/Entypo');

var _Entypo2 = _interopRequireDefault(_Entypo);

var _MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons');

var _MaterialCommunityIcons2 = _interopRequireDefault(_MaterialCommunityIcons);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

var _serviceActions = require('./elements/serviceActions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    incrimentDecriment: {
        displayName: 'incrimentDecriment'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/service/incrimentDecrimentCompt.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var incrimentDecriment = _wrapComponent('incrimentDecriment')(function (_Component) {
    _inherits(incrimentDecriment, _Component);

    function incrimentDecriment() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, incrimentDecriment);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = incrimentDecriment.__proto__ || Object.getPrototypeOf(incrimentDecriment)).call.apply(_ref, [this].concat(args))), _this), _this.state = { massage: "", totalData: "" }, _this.handleIncrement = function () {
            var price = _this.props.service.data.price;
            price = Number(price);
            var massage = Number(_this.state.massage) + 1;
            _this.setState({ massage: massage });
            if (_this.state.totalData.answers && _this.state.totalData.answers.length > 0) {
                if (_this.state.totalData.answers[0].option_price_impact == "Addition") {
                    price = price + (Number(massage) + Number(_this.state.totalData.answers[0].price_impact));
                } else {
                    price = price + Number(massage) * Number(_this.state.totalData.answers[0].price_impact);
                }
                var data = _this.props.service.data;
                price = _this.addZeroes(price);
                data.price = price;
                _this.props.setServiceDetails(data);
            }
        }, _this.handleDecrement = function () {
            price = Number(price);
            var price = _this.props.service.data.price;
            if (Number(_this.state.massage) == 0) {} else {
                var massage = Number(_this.state.massage) - 1;
                _this.setState({ massage: massage });
                if (_this.state.totalData.answers && _this.state.totalData.answers.length > 0) {
                    if (_this.state.totalData.answers[0].option_price_impact == "Addition") {
                        price = price - (_this.state.massage + Number(_this.state.totalData.answers[0].price_impact));
                    } else {
                        price = price - Number(_this.state.massage) * Number(_this.state.totalData.answers[0].price_impact);
                    }
                    _this.setState({ massage: massage });
                    var data = _this.props.service.data;
                    price = _this.addZeroes(price);
                    data.price = price;
                    _this.props.setServiceDetails(data);
                }
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(incrimentDecriment, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            console.log(this.props);
            this.setState({ massage: this.props.massage.IncrementId });
            this.setState({ totalData: this.props.massage });
        }
    }, {
        key: 'increment',
        value: function increment() {
            console.log("from child");
            this.props.onIncrement(this.props.massage);
        }
    }, {
        key: 'decrement',
        value: function decrement() {
            this.props.onDecrement(this.props.massage);
        }
    }, {
        key: 'addZeroes',
        value: function addZeroes(num) {
            var value = num.toFixed(2);
            return value;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react3.default.createElement(
                _reactNative.View,
                { style: { flexDirection: 'row' }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 85
                    }
                },
                _react3.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: _styles2.default.confirmationServicePlusWarp, onPress: this.handleDecrement.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 87
                        }
                    },
                    _react3.default.createElement(_MaterialCommunityIcons2.default, { name: 'minus', style: _styles2.default.confirmationServicePlusIcon, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 88
                        }
                    })
                ),
                _react3.default.createElement(
                    _reactNative.View,
                    { style: { marginLeft: 5, marginRight: 5, borderWidth: 1, borderRadius: 10, width: 50, borderColor: '#e0e0e0', alignItems: 'center' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 91
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.Text,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 92
                            }
                        },
                        this.state.massage
                    )
                ),
                _react3.default.createElement(
                    _reactNative.TouchableOpacity,
                    { style: _styles2.default.confirmationServicePlusWarp, onPress: this.handleIncrement.bind(this), __source: {
                            fileName: _jsxFileName,
                            lineNumber: 95
                        }
                    },
                    _react3.default.createElement(_Entypo2.default, { name: 'plus', style: _styles2.default.confirmationServicePlusIcon, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 96
                        }
                    })
                )
            );
        }
    }]);

    return incrimentDecriment;
}(_react2.Component));

incrimentDecriment.propTypes = {
    auth: _propTypes2.default.object.isRequired
};
var mapStateToProps = function mapStateToProps(state) {
    return {
        auth: state.auth,
        service: state.service
    };
};
var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        setServiceDetails: function setServiceDetails(data) {
            return dispatch((0, _serviceActions.setServiceDetails)(data));
        }
    };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(incrimentDecriment);