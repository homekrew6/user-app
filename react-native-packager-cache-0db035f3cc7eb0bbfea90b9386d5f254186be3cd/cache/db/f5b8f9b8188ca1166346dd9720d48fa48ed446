Object.defineProperty(exports, "__esModule", {
	value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/accounts/reset_password.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _authActions = require('./elements/authActions');

var _reactNative = require('react-native');

var _reactNativeLoadingSpinnerOverlay = require('react-native-loading-spinner-overlay');

var _reactNativeLoadingSpinnerOverlay2 = _interopRequireDefault(_reactNativeLoadingSpinnerOverlay);

var _nativeBase = require('native-base');

var _api = require('../../api');

var _api2 = _interopRequireDefault(_api);

var _i18n = require('../../i18n/i18n');

var _i18n2 = _interopRequireDefault(_i18n);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
	ResetPassword: {
		displayName: 'ResetPassword'
	}
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
	filename: '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/accounts/reset_password.js',
	components: _components,
	locals: [module],
	imports: [_react3.default]
});

function _wrapComponent(id) {
	return function (Component) {
		return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
	};
}

var deviceHeight = _reactNative.Dimensions.get('window').height;
var deviceWidth = _reactNative.Dimensions.get('window').width;
var lockImage = require("../../../img/lock.png");
var buttonImage = require("../../../img/bg-button.png");

var ResetPassword = _wrapComponent('ResetPassword')(function (_Component) {
	_inherits(ResetPassword, _Component);

	function ResetPassword(props) {
		_classCallCheck(this, ResetPassword);

		var _this = _possibleConstructorReturn(this, (ResetPassword.__proto__ || Object.getPrototypeOf(ResetPassword)).call(this, props));

		_this.state = {
			otp: '',
			password: '',
			visible: false
		};
		return _this;
	}

	_createClass(ResetPassword, [{
		key: 'pressSend',
		value: function pressSend() {
			var _this2 = this;

			if (!this.state.otp) {
				_reactNative.Alert.alert('Please enter otp');
				return false;
			}
			if (!this.state.password) {
				_reactNative.Alert.alert('Please enter password');
				return false;
			}
			this.setState({ visible: true });
			_api2.default.post('Customers/otpChecking', { otp: this.state.otp }).then(function (res) {

				_api2.default.post('Customers/reset-password?access_token=' + res.response.access_token, { newPassword: _this2.state.password }).then(function (resReset) {
					_this2.setState({ visible: false });
					_reactNative.Alert.alert('Password changed successfully');
					_this2.props.navigation.navigate("Login");
				}).catch(function (errReset) {
					_this2.setState({ visible: false });
					_reactNative.Alert.alert('Please try again');
				});
			}).catch(function (err) {
				_this2.setState({ visible: false });
				_reactNative.Alert.alert('Wrong OTP.');
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			return _react3.default.createElement(
				_nativeBase.Container,
				{ style: { backgroundColor: '#fff' }, __source: {
						fileName: _jsxFileName,
						lineNumber: 56
					}
				},
				_react3.default.createElement(_reactNative.StatusBar, {
					backgroundColor: '#81cdc7',
					__source: {
						fileName: _jsxFileName,
						lineNumber: 57
					}
				}),
				_react3.default.createElement(
					_nativeBase.Content,
					{
						__source: {
							fileName: _jsxFileName,
							lineNumber: 60
						}
					},
					_react3.default.createElement(_reactNativeLoadingSpinnerOverlay2.default, { visible: this.state.visible, textContent: "Loading...", textStyle: { color: '#FFF' }, androidStatusBarColor: '#81cdc7', __source: {
							fileName: _jsxFileName,
							lineNumber: 61
						}
					}),
					_react3.default.createElement(
						_nativeBase.Header,
						{ style: { backgroundColor: '#fff' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 62
							}
						},
						_react3.default.createElement(
							_nativeBase.Left,
							{ style: { marginRight: -15 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 63
								}
							},
							_react3.default.createElement(
								_nativeBase.Button,
								{ transparent: true, onPress: function onPress() {
										return _this3.props.navigation.goBack();
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 64
									}
								},
								_react3.default.createElement(_nativeBase.Icon, { style: { color: '#81cdc7' }, name: 'arrow-back', __source: {
										fileName: _jsxFileName,
										lineNumber: 65
									}
								})
							)
						),
						_react3.default.createElement(
							_nativeBase.Body,
							{
								__source: {
									fileName: _jsxFileName,
									lineNumber: 68
								}
							},
							_react3.default.createElement(
								_nativeBase.Title,
								{ style: { color: '#1e3768' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 69
									}
								},
								_i18n2.default.t('reset_password')
							)
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { padding: 20 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 73
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flexDirection: 'row', justifyContent: 'center', height: 120, top: 20 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 74
								}
							},
							_react3.default.createElement(_reactNative.Image, { source: lockImage, style: { width: 80, height: 80 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 75
								}
							})
						),
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 77
								}
							},
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 78
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#81cdc7', fontSize: 20 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 79
										}
									},
									'*'
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { marginTop: -20, color: '#81cdc7' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 80
										}
									},
									'___'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginLeft: 2 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 82
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#81cdc7', fontSize: 20 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 83
										}
									},
									'*'
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { marginTop: -20, color: '#81cdc7' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 84
										}
									},
									'___'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginLeft: 2 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 86
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#81cdc7', fontSize: 20 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 87
										}
									},
									'*'
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { marginTop: -20, color: '#81cdc7' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 88
										}
									},
									'___'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginLeft: 2 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 90
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#81cdc7', fontSize: 20 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 91
										}
									},
									'*'
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { marginTop: -20, color: '#81cdc7' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 92
										}
									},
									'___'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginLeft: 2 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 94
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#81cdc7', fontSize: 20 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 95
										}
									},
									'*'
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { marginTop: -20, color: '#81cdc7' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 96
										}
									},
									'___'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginLeft: 2 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 98
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#81cdc7', fontSize: 20 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 99
										}
									},
									'*'
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { marginTop: -20, color: '#81cdc7' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 100
										}
									},
									'___'
								)
							)
						),
						_react3.default.createElement(
							_reactNative.View,
							{ style: { marginTop: 30, flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 104
								}
							},
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 105
									}
								},
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#515151', fontSize: 10 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 106
										}
									},
									_i18n2.default.t('reset_password_text3')
								),
								_react3.default.createElement(
									_nativeBase.Text,
									{ style: { color: '#515151', fontSize: 10 }, __source: {
											fileName: _jsxFileName,
											lineNumber: 107
										}
									},
									_i18n2.default.t('reset_password_text4')
								)
							)
						),
						_react3.default.createElement(
							_reactNative.View,
							{ style: { marginTop: 30 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 112
								}
							},
							_react3.default.createElement(
								_nativeBase.Item,
								{ regular: true, style: { borderColor: '#29416f', borderWidth: 1, borderRadius: 2, height: 45 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 113
									}
								},
								_react3.default.createElement(_nativeBase.Input, { onChangeText: function onChangeText(text) {
										return _this3.setState({ otp: text });
									}, value: this.state.otp, keyboardType: 'numeric', placeholder: _i18n2.default.t('four_digit_code'), style: { textAlign: 'center', color: '#29416f', fontSize: 14 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 114
									}
								})
							),
							_react3.default.createElement(
								_nativeBase.Item,
								{ regular: true, style: { borderColor: '#29416f', borderWidth: 1, borderRadius: 2, height: 45, marginTop: 10 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 116
									}
								},
								_react3.default.createElement(_nativeBase.Input, { onChangeText: function onChangeText(text) {
										return _this3.setState({ password: text });
									}, value: this.state.password, secureTextEntry: true, placeholder: _i18n2.default.t('new_password'), style: { textAlign: 'center', color: '#29416f', fontSize: 14 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 117
									}
								})
							)
						)
					),
					_react3.default.createElement(
						_reactNative.TouchableOpacity,
						{ transparent: true, style: { flex: 1, flexDirection: 'row', height: 70, marginTop: 2 }, onPress: function onPress() {
								return _this3.pressSend();
							}, __source: {
								fileName: _jsxFileName,
								lineNumber: 121
							}
						},
						_react3.default.createElement(
							_reactNative.Image,
							{ source: buttonImage, style: { flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', width: deviceWidth / 1.3, height: 55 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 122
								}
							},
							_react3.default.createElement(
								_nativeBase.Text,
								{ style: { color: '#fff', fontSize: 20, marginTop: -10, height: 30 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 123
									}
								},
								_i18n2.default.t('save_password')
							)
						)
					)
				)
			);
		}
	}]);

	return ResetPassword;
}(_react2.Component));

ResetPassword.propTypes = {
	auth: _propTypes2.default.object.isRequired
};
var mapStateToProps = function mapStateToProps(state) {
	return {
		auth: state.auth
	};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		login: function login(email, password) {
			return dispatch((0, _authActions.login)(email, password));
		}
	};
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ResetPassword);