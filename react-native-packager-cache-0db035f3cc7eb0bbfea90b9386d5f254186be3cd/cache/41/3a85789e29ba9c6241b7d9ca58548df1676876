Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/accounts/login.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNavigation = require('react-navigation');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _authActions = require('./elements/authActions');

var _reactNative = require('react-native');

var _reactNativeFacebookLogin = require('react-native-facebook-login');

var _api = require('../../api');

var _api2 = _interopRequireDefault(_api);

var _reactNativeLoadingSpinnerOverlay = require('react-native-loading-spinner-overlay');

var _reactNativeLoadingSpinnerOverlay2 = _interopRequireDefault(_reactNativeLoadingSpinnerOverlay);

var _nativeBase = require('native-base');

var _i18n = require('../../i18n/i18n');

var _i18n2 = _interopRequireDefault(_i18n);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

var _MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons');

var _MaterialCommunityIcons2 = _interopRequireDefault(_MaterialCommunityIcons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Login: {
    displayName: 'Login'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/accounts/login.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var deviceHeight = _reactNative.Dimensions.get('window').height;
var deviceWidth = _reactNative.Dimensions.get('window').width;
var launchscreenBg = require('../../../img/bg-login.png');
var launchscreenLogo = require('../../../img/logo.png');
var buttonImage = require('../../../img/bg-button.png');

var resetAction = _reactNavigation.NavigationActions.reset({
  index: 0,
  actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Menu' })]
});

var Login = _wrapComponent('Login')(function (_Component) {
  _inherits(Login, _Component);

  function Login(props) {
    _classCallCheck(this, Login);

    var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

    _this.state = {
      email: '',
      password: ''
    };
    return _this;
  }

  _createClass(Login, [{
    key: 'pressForgotPassword',
    value: function pressForgotPassword() {
      this.props.navigation.navigate('ForgotPassword');
    }
  }, {
    key: 'pressLogin',
    value: function pressLogin() {
      var _this2 = this;

      if (!this.state.email) {
        _reactNative.Alert.alert('Please enter email');
        return false;
      }
      if (!this.state.password) {
        _reactNative.Alert.alert('Please enter password');
        return false;
      }
      var email = this.state.email;
      var password = this.state.password;
      _api2.default.post('Customers/approveChecking', { email: this.state.email }).then(function (resEdit) {
        if (resEdit.response.is_active) {
          _this2.props.login(email, password).then(function (res) {
            console.log(res);
            if (res.type == 'success') {
              _this2.props.getUserDetail(res.userId, res.id).then(function (userRes) {
                console.log(userRes);

                _this2.props.navigation.dispatch(resetAction);
              }).catch(function (err) {
                _reactNative.Alert.alert('Login failed, please try again');
              });
            } else {
              _reactNative.Alert.alert('Login failed, please try again');
            }
          }).catch(function (err) {
            console.log(err);
            _reactNative.Alert.alert('Login fail,please try again');
          });
        } else {
          _reactNative.Alert.alert('You account not active, contact with admin.');
        }
      }).catch(function (err) {
        _reactNative.Alert.alert('Login fail,please try again');
      });
    }
  }, {
    key: 'clcikFacebook',
    value: function clcikFacebook() {
      var _this3 = this;

      _reactNativeFacebookLogin.FBLoginManager.loginWithPermissions(['email', 'user_friends'], function (error, data) {
        if (!error) {
          console.log('Login data: ', data);
          var profileDetails = JSON.parse(data.profile);
          if (profileDetails.email) {
            _api2.default.post('Customers/socialLoginEmailCheck', { email: profileDetails.email }).then(function (res) {
              console.log(res);
              if (res.response.exist == 1) {
                _reactNative.Alert.alert('Email already exist');
              } else if (res.response.exist == 2) {
                _this3.props.login(profileDetails.email, profileDetails.id).then(function (resLogin) {
                  console.log(resLogin);
                  if (resLogin.type == 'success') {
                    _this3.props.getUserDetail(resLogin.userId, resLogin.id).then(function (userRes) {
                      console.log(userRes);

                      _this3.props.navigation.dispatch(resetAction);
                    }).catch(function (err) {
                      _reactNative.Alert.alert('Login failed, please try again');
                    });
                  } else {
                    _reactNative.Alert.alert('Login failed, please try again');
                  }
                }).catch(function (err) {
                  console.log(err);
                  _reactNative.Alert.alert('Login fail,please try again');
                });
              } else {
                _api2.default.post('Customers/signup', { name: profileDetails.name, email: profileDetails.email, password: profileDetails.id, social_type: 'facebook', social_id: profileDetails.id, is_active: 1 }).then(function (responseJson) {
                  _this3.props.login(profileDetails.email, profileDetails.id).then(function (resLogin) {
                    console.log(resLogin);
                    if (resLogin.type == 'success') {
                      _this3.props.getUserDetail(resLogin.userId, resLogin.id).then(function (userRes) {
                        console.log(userRes);

                        _this3.props.navigation.dispatch(resetAction);
                      }).catch(function (err) {
                        _reactNative.Alert.alert('Login failed, please try again');
                      });
                    } else {
                      _reactNative.Alert.alert('Login failed, please try again');
                    }
                  }).catch(function (err) {
                    console.log(err);
                    _reactNative.Alert.alert('Login fail,please try again');
                  });
                }).catch(function (err) {
                  console.log(err);
                });
              }
            }).catch(function (err) {
              _reactNative.Alert.alert('please try again.');
            });
          } else {
            _reactNative.Alert.alert('Email not found');
          }
        } else {
          console.log('Error: ', error);
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      return _react3.default.createElement(
        _nativeBase.Container,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 149
          }
        },
        _react3.default.createElement(_reactNative.StatusBar, {
          backgroundColor: '#81cdc7',
          __source: {
            fileName: _jsxFileName,
            lineNumber: 150
          }
        }),
        _react3.default.createElement(
          _reactNative.Image,
          { source: launchscreenBg, style: _styles2.default.imageContainer, __source: {
              fileName: _jsxFileName,
              lineNumber: 154
            }
          },
          _react3.default.createElement(
            _nativeBase.Content,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 155
              }
            },
            _react3.default.createElement(_reactNativeLoadingSpinnerOverlay2.default, { visible: this.props.auth.busy, textContent: 'Loading...', textStyle: { color: '#FFF' }, __source: {
                fileName: _jsxFileName,
                lineNumber: 156
              }
            }),
            _react3.default.createElement(
              _reactNative.View,
              { style: _styles2.default.logoContainer, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 157
                }
              },
              _react3.default.createElement(_reactNative.Image, { source: launchscreenLogo, style: _styles2.default.logo, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 158
                }
              })
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: { padding: 20 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 160
                }
              },
              _react3.default.createElement(
                _nativeBase.Item,
                { regular: true, style: { borderColor: '#29416f', borderWidth: 1, borderRadius: 2, height: 45 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 161
                  }
                },
                _react3.default.createElement(_nativeBase.Input, { keyboardType: 'email-address', onChangeText: function onChangeText(text) {
                    return _this4.setState({ email: text });
                  }, value: this.state.email, placeholder: _i18n2.default.t('email'), style: { textAlign: 'center', color: '#29416f', fontSize: 14 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 162
                  }
                })
              ),
              _react3.default.createElement(
                _nativeBase.Item,
                { regular: true, style: { borderColor: '#29416f', marginTop: 10, borderWidth: 1, borderRadius: 2, height: 45 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 164
                  }
                },
                _react3.default.createElement(_nativeBase.Input, { onChangeText: function onChangeText(text) {
                    return _this4.setState({ password: text });
                  }, value: this.state.password, placeholder: _i18n2.default.t('password'), secureTextEntry: true, style: { textAlign: 'center', color: '#29416f', fontSize: 14 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 165
                  }
                })
              )
            ),
            _react3.default.createElement(
              _reactNative.TouchableOpacity,
              { transparent: true, style: { height: 70, marginTop: 2, flexDirection: 'row', paddingLeft: 15, paddingRight: 15 }, onPress: function onPress() {
                  return _this4.pressLogin();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 168
                }
              },
              _react3.default.createElement(
                _reactNative.Image,
                { source: buttonImage, style: { flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', height: 55 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 169
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Text,
                  { style: { color: '#fff', fontSize: 20, marginTop: -10, height: 30 }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 170
                    }
                  },
                  _i18n2.default.t('login')
                )
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 173
                }
              },
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                    return _this4.pressForgotPassword();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 174
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Text,
                  { style: { textAlign: 'center', color: 'red', fontSize: 16, paddingBottom: 20 }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 175
                    }
                  },
                  _i18n2.default.t('forgot_password')
                )
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: { flexDirection: 'row', justifyContent: 'center', marginTop: -13 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 180
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 181
                  }
                },
                '- ',
                _i18n2.default.t('or'),
                ' -'
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: { flexDirection: 'row', justifyContent: 'center', marginTop: 5, paddingLeft: 15, paddingRight: 15 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 183
                }
              },
              _react3.default.createElement(
                _nativeBase.Button,
                { block: true, transparent: true, style: { borderWidth: 1, borderColor: '#29416f', flex: 1 }, onPress: function onPress() {
                    return _this4.clcikFacebook();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 184
                  }
                },
                _react3.default.createElement(_MaterialCommunityIcons2.default, { name: 'facebook', style: { color: '#29416f', marginRight: 5, fontSize: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 185
                  }
                }),
                _react3.default.createElement(
                  _nativeBase.Text,
                  { style: { color: '#29416f' }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 186
                    }
                  },
                  _i18n2.default.t('via_facebook')
                )
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: { flexDirection: 'row', justifyContent: 'center', marginTop: 5, paddingLeft: 15, paddingRight: 15 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 189
                }
              },
              _react3.default.createElement(
                _nativeBase.Button,
                { block: true, transparent: true, style: { borderWidth: 1, borderColor: '#29416f', flex: 1 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 190
                  }
                },
                _react3.default.createElement(_MaterialCommunityIcons2.default, { name: 'gmail', style: { color: '#29416f', marginRight: 5, fontSize: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 191
                  }
                }),
                _react3.default.createElement(
                  _nativeBase.Text,
                  { style: { color: '#29416f' }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 192
                    }
                  },
                  _i18n2.default.t('via_gmail')
                )
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: { flexDirection: 'row', justifyContent: 'center', alignItems: 'center', marginTop: 10, marginBottom: 20 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 196
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                { style: { color: '#252525' }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 197
                  }
                },
                _i18n2.default.t('not_a_register_member'),
                ' '
              ),
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                    return _this4.props.navigation.navigate('Signup');
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 198
                  }
                },
                _react3.default.createElement(
                  _nativeBase.Text,
                  { style: { color: '#29416f' }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 199
                    }
                  },
                  _i18n2.default.t('signup')
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Login;
}(_react2.Component));

Login.propTypes = {
  auth: _propTypes2.default.object.isRequired
};
var mapStateToProps = function mapStateToProps(state) {
  return {
    auth: state.auth
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    login: function login(email, password) {
      return dispatch((0, _authActions.login)(email, password));
    },
    getUserDetail: function getUserDetail(id, auth) {
      return dispatch((0, _authActions.getUserDetail)(id, auth));
    }
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);