Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require('../../../api/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var authApi = function () {
	function authApi() {
		_classCallCheck(this, authApi);
	}

	_createClass(authApi, null, [{
		key: 'login',
		value: function login(email, password) {
			return new Promise(function (resolve, reject) {
				_index2.default.post('Customers/login', { email: email, password: password }).then(function (responseJson) {
					resolve(responseJson);
				}).catch(function (err) {
					console.log(err);
					reject(err);
				});
			});
		}
	}, {
		key: 'signup',
		value: function signup(name, email, password, phone) {
			return new Promise(function (resolve, reject) {
				_index2.default.post('Customers/signup', { name: name, email: email, password: password, phone: phone, is_active: 1 }).then(function (responseJson) {
					resolve(responseJson);
				}).catch(function (err) {
					console.log(err);
					reject(err);
				});
			});
		}
	}, {
		key: 'getUserDetail',
		value: function getUserDetail(id, auth) {
			return new Promise(function (resolve, reject) {
				_index2.default.get('Customers/' + id + '?access_token=' + auth).then(function (responseJson) {
					resolve(responseJson);
				}).catch(function (err) {
					console.log(err);
					reject(err);
				});
			});
		}
	}]);

	return authApi;
}();

exports.default = authApi;