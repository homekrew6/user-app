Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/service/serviceDetails.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _reactNative = require('react-native');

var _MaterialIcons = require('react-native-vector-icons/MaterialIcons');

var _MaterialIcons2 = _interopRequireDefault(_MaterialIcons);

var _FontAwesome = require('react-native-vector-icons/FontAwesome');

var _FontAwesome2 = _interopRequireDefault(_FontAwesome);

var _SimpleLineIcons = require('react-native-vector-icons/SimpleLineIcons');

var _SimpleLineIcons2 = _interopRequireDefault(_SimpleLineIcons);

var _Ionicons = require('react-native-vector-icons/Ionicons');

var _Ionicons2 = _interopRequireDefault(_Ionicons);

var _EvilIcons = require('react-native-vector-icons/EvilIcons');

var _EvilIcons2 = _interopRequireDefault(_EvilIcons);

var _Entypo = require('react-native-vector-icons/Entypo');

var _Entypo2 = _interopRequireDefault(_Entypo);

var _MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons');

var _MaterialCommunityIcons2 = _interopRequireDefault(_MaterialCommunityIcons);

var _incrimentDecrimentCompt = require('./incrimentDecrimentCompt');

var _incrimentDecrimentCompt2 = _interopRequireDefault(_incrimentDecrimentCompt);

var _reactNativeSlider = require('react-native-slider');

var _reactNativeSlider2 = _interopRequireDefault(_reactNativeSlider);

var _serviceActions = require('./elements/serviceActions');

var _reactNativeLoadingSpinnerOverlay = require('react-native-loading-spinner-overlay');

var _reactNativeLoadingSpinnerOverlay2 = _interopRequireDefault(_reactNativeLoadingSpinnerOverlay);

var _nativeBase = require('native-base');

var _i18n = require('../../i18n/i18n');

var _i18n2 = _interopRequireDefault(_i18n);

var _reactNativeImageCropPicker = require('react-native-image-crop-picker');

var _reactNativeImageCropPicker2 = _interopRequireDefault(_reactNativeImageCropPicker);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

var _reactNativeAws = require('react-native-aws3');

var _config = require('../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  serviceDetails: {
    displayName: 'serviceDetails'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/nits-58/Desktop/project/anup/loopback/user-app/js/components/service/serviceDetails.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var deviceHeight = _reactNative.Dimensions.get('window').height;
var deviceWidth = _reactNative.Dimensions.get('window').width;
var logo_hdr = require('../../../img/logo2.png');
var carveImage = require('../../../img/bg-6.png');
var logo22 = require('../../../img/logo22.png');
var img17 = require('../../../img/icon17.png');
var img18 = require('../../../img/img22.png');
var img19 = require('../../../img/swiper-2.png');
var img20 = require('../../../img/swiper-2.png');
var img21 = require('../../../img/swiper-2.png');
var img22 = require('../../../img/swiper-2.png');

var serviceDetails = _wrapComponent('serviceDetails')(function (_Component) {
  _inherits(serviceDetails, _Component);

  function serviceDetails(props) {
    _classCallCheck(this, serviceDetails);

    var _this = _possibleConstructorReturn(this, (serviceDetails.__proto__ || Object.getPrototypeOf(serviceDetails)).call(this, props));

    _this.state = {
      isOpen: true,
      value: 0.2,
      questionList: [],
      serviceName: props.service.data.name,
      banner_image: props.service.data.banner_image,
      cover_image: props.service.data.cover_image,
      numberValue: 1,
      activeRadioArray: [false, false, false],
      IsSpinnerVisible: false,

      sliderData: [{
        'src': 'https://homekrewbooking.s3.amazonaws.com/66665615_.png',
        'key': 1
      }]
    };

    var _this = _possibleConstructorReturn(this, (serviceDetails.__proto__ || Object.getPrototypeOf(serviceDetails)).call(this, props));

    console.log("propsDetails in service details", props);

    return _this;
  }

  _createClass(serviceDetails, [{
    key: 'uploadPhoto',
    value: function uploadPhoto() {
      var _this2 = this;

      this.setState({ IsSpinnerVisible: true });
      _reactNativeImageCropPicker2.default.openCamera({
        width: 400,
        height: 300,
        cropping: true
      }).then(function (response) {
        var uri = void 0;

        if (!response.path) {
          uri = response.uri;
        } else {
          uri = response.path;
        }
        var file = {
          uri: uri,
          name: Math.floor(Math.random() * 100000000 + 1) + '_.png',
          type: response.mime || 'image/png'
        };
        console.log(file);

        var options = _config2.default.s3;
        console.log(options);
        _reactNativeAws.RNS3.put(file, _config2.default.s3).then(function (response) {
          console.log(response);
          if (response.status !== 201) {
            _this2.setState({ IsSpinnerVisible: false });
            throw new Error('Failed to upload image to S3');
          }

          if (response.status == 201) {
            var slider = [];
            _this2.state.sliderData.map(function (sdata) {
              slider.push(sdata);
            });
            var lengthOfSlider = slider.length;
            lengthOfSlider = lengthOfSlider - 1;
            var latestKey = slider[lengthOfSlider].key;
            latestKey = latestKey + 1;
            var newData = {
              'src': response.body.postResponse.location,
              'key': latestKey
            };
            slider.push(newData);
            _this2.setState({ IsSpinnerVisible: false });
            _this2.setState({ sliderData: slider });
          }
        }).catch(function (err) {
          _this2.setState({ IsSpinnerVisible: false });
          console.log(err);
        });
      }).catch(function (err) {
        _this2.setState({ IsSpinnerVisible: false });
        console.log(err);
      });
    }
  }, {
    key: 'changeActiveRadio',
    value: function changeActiveRadio(data) {
      var _this3 = this;

      data.selected = !data.selected;
      var dataselected = data;
      var item = void 0;
      this.state.questionList.map(function (ques) {
        if (ques.id == data.questionId) {
          item = ques;
        }
      });
      if (item) {
        if (item.answers) {
          noofselected = 0;
          item.answers.map(function (item1) {
            if (item1.selected == true) {
              noofselected++;
            }
          });
          if (noofselected > 1) {
            item.answers.map(function (item1) {
              if (item1.id == dataselected.id) {} else {
                if (item1.selected == true) {
                  item1.selected = false;
                  var price = _this3.props.service.data.price;
                  price = Number(price);
                  if (dataselected.option_price_impact == "Addition") {
                    price = price - Number(dataselected.price_impact);
                  } else {
                    price = price / Number(dataselected.price_impact);
                  }
                  var data = _this3.props.service.data;
                  price = _this3.addZeroes(price);
                  data.price = price;
                  _this3.props.setServiceDetails(data);
                }
              }
            });
          }
        }
      }
      var price = this.props.service.data.price;
      price = Number(price);
      if (data.selected == false) {
        if (data.option_price_impact == "Addition") {
          price = price - Number(data.price_impact);
        } else {
          price = price / Number(data.price_impact);
        }
      } else {
        if (data.option_price_impact == "Addition") {
          price = price + Number(data.price_impact);
        } else {
          price = price * Number(data.price_impact);
        }
      }

      var data = this.props.service.data;
      price = this.addZeroes(price);
      data.price = price;
      this.props.setServiceDetails(data);
    }
  }, {
    key: 'activeRadio',
    value: function activeRadio(index) {
      var newradio = [false, false, false];
      newradio[index] = true;
      this.setState({
        activeRadioArray: newradio
      });
    }
  }, {
    key: 'switchChange',
    value: function switchChange(data) {
      var price = this.props.service.data.price;
      price = Number(price);
      data.Status = !data.Status;
      console.log(data.Status);
      var index = void 0;
      for (var i = 0; i < this.state.questionList.length; i++) {
        if (this.state.questionList[i].id == data.id) {
          index = i;
          break;
        }
      }
      if (index || index == 0) {
        if (data.Status == false) {
          var data1 = this.state.questionList[index];
          if (data1.answers && data1.answers.length > 0) {
            if (data1.answers[0].option_price_impact == "Addition") {
              price = price - Number(data1.answers[0].price_impact);
            } else {
              price = price / Number(data1.answers[0].price_impact);
            }
            var data = this.props.service.data;
            price = this.addZeroes(price);
            data.price = price;
            this.props.setServiceDetails(data);
          }
        } else {
          var data1 = this.state.questionList[index];
          if (data1.answers && data1.answers.length > 0) {
            if (data1.answers[0].option_price_impact == "Addition") {
              price = price + Number(data1.answers[0].price_impact);
            } else {
              price = price * Number(data1.answers[0].price_impact);
            }
            var data = this.props.service.data;
            price = this.addZeroes(price);
            data.price = price;
            this.props.setServiceDetails(data);
          }
        }
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this4 = this;

      this.props.getQuestionListByServiceId(this.props.service.data).then(function (res) {
        if (res.type == "success") {
          console.log("success", res);
          _this4.setState({ questionList: res });
          var price = 0.0;
          for (var i = 0; i < _this4.state.questionList.length; i++) {
            if (_this4.state.questionList[i].type == 1 || _this4.state.questionList[i].type == 2 || _this4.state.questionList[i].type == 3 || _this4.state.questionList[i].type == 4) {
              if (_this4.state.questionList[i].answers && _this4.state.questionList[i].answers.length > 0) {
                if (_this4.state.questionList[i].type == 1) {
                  if (_this4.state.questionList[i].answers[0].option_price_impact == "Addition") {
                    price = price + (_this4.state.questionList[i].IncrementId + Number(_this4.state.questionList[i].answers[0].price_impact));
                  } else {
                    price = price + _this4.state.questionList[i].IncrementId * Number(_this4.state.questionList[i].answers[0].price_impact);
                  }
                } else if (_this4.state.questionList[i].type == 2) {
                  if (_this4.state.questionList[i].answers[0].option_price_impact == "Addition") {
                    price = price + Number(_this4.state.questionList[i].answers[0].price_impact);
                  } else {
                    price = price * Number(_this4.state.questionList[i].answers[0].price_impact);
                  }
                }
              }
            }
          }
          var data = _this4.props.service.data;
          data.questionList = _this4.state.questionList;
          price = _this4.addZeroes(price);
          data.price = price;
          _this4.props.setServiceDetails(data);
        }
      }).catch(function (err) {
        console.log("error in catch");
        console.log(err);
      });
    }
  }, {
    key: 'renderFlatListImage',
    value: function renderFlatListImage() {}
  }, {
    key: 'addZeroes',
    value: function addZeroes(num) {
      var value = num.toFixed(2);
      return value;
    }
  }, {
    key: 'sliderChanged',
    value: function sliderChanged(value, data) {
      debugger;
      if (value != 0) {
        value = parseFloat(Math.round(value * 100) / 100).toFixed(2);
        value = Number(value);
        var price = this.props.service.data.price;
        price = Number(price);
        if (data.answers) {
          if (data.answers[0].option_price_impact == "Addition") {
            if (this.props.service.data.value) {
              if (value < this.props.service.data.value) {
                price = price - (value + Number(data.answers[0].price_impact));
              } else {
                price = price + (value + Number(data.answers[0].price_impact));
              }
            } else {
              price = price + (value + Number(data.answers[0].price_impact));
            }
          } else {
            if (this.props.service.data.value) {
              if (value < this.props.service.data.value) {
                price = price + (value + Number(data.answers[0].price_impact));
              } else {
                price = price + (value + Number(data.answers[0].price_impact));
              }
            } else {
              price = price + value * Number(data.answers[0].price_impact);
            }
          }

          price = parseFloat(Math.round(price * 100) / 100).toFixed(2);
          price = Number(price);
          var data = this.props.service.data;
          price = this.addZeroes(price);
          data.price = price;
          data.value = value;
          this.props.setServiceDetails(data);
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      var questionList = this.state.questionList.map(function (data, key) {
        return data.type == "1" ? _react3.default.createElement(
          _reactNative.View,
          { key: data.id, __source: {
              fileName: _jsxFileName,
              lineNumber: 385
            }
          },
          _react3.default.createElement(
            _nativeBase.Item,
            { style: _styles2.default.confirmationItem, __source: {
                fileName: _jsxFileName,
                lineNumber: 386
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: _styles2.default.confirmationIconView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 387
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                { name: 'scissors', style: _styles2.default.confirmationViewIcon, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 388
                  }
                },
                ' ',
                data.image ? _react3.default.createElement(_reactNative.Image, { source: { uri: data.image }, style: { width: 20, height: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 390
                  }
                }) : _react3.default.createElement(_reactNative.Image, { source: logo22, style: { height: 20, width: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 392
                  }
                }),
                ' '
              )
            ),
            _react3.default.createElement(
              _nativeBase.Text,
              { style: _styles2.default.confirmationMainTxt, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 396
                }
              },
              data.name
            ),
            _react3.default.createElement(_incrimentDecrimentCompt2.default, { massage: data, onIncrement: _this5.handleIncrement, onDecrement: _this5.handleDecrement, __source: {
                fileName: _jsxFileName,
                lineNumber: 397
              }
            })
          )
        ) : data.type == "2" ? _react3.default.createElement(
          _reactNative.View,
          { key: data.id, __source: {
              fileName: _jsxFileName,
              lineNumber: 399
            }
          },
          _react3.default.createElement(
            _nativeBase.Item,
            { style: _styles2.default.confirmationItem, __source: {
                fileName: _jsxFileName,
                lineNumber: 400
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: _styles2.default.confirmationIconView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 401
                }
              },
              data.image ? _react3.default.createElement(_reactNative.Image, { source: { uri: data.image }, style: { width: 20, height: 20 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 404
                }
              }) : _react3.default.createElement(_reactNative.Image, { source: logo22, style: { height: 20, width: 20 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 406
                }
              })
            ),
            _react3.default.createElement(
              _nativeBase.Text,
              { style: _styles2.default.confirmationMainTxt, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 410
                }
              },
              data.name
            ),
            _react3.default.createElement(_nativeBase.Switch, { value: data.Status, onValueChange: function onValueChange() {
                return _this5.switchChange(data);
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 411
              }
            })
          )
        ) : data.type == "4" ? _react3.default.createElement(
          _reactNative.View,
          { style: _styles2.default.confirmationItem2, key: data.id, __source: {
              fileName: _jsxFileName,
              lineNumber: 413
            }
          },
          _react3.default.createElement(_Entypo2.default, { name: 'home', style: _styles2.default.confirmationViewIcon2, __source: {
              fileName: _jsxFileName,
              lineNumber: 414
            }
          }),
          _react3.default.createElement(
            _reactNative.View,
            { style: _styles2.default.confirmationMainTxt, __source: {
                fileName: _jsxFileName,
                lineNumber: 415
              }
            },
            _react3.default.createElement(_reactNativeSlider2.default, {
              minimumTrackTintColor: '#81cdc7',
              maximumTrackTintColor: '#e1e1e1',
              thumbTintColor: '#81cdc7',
              value: data.start_range,
              onValueChange: function onValueChange(value) {
                return _this5.sliderChanged(value, data);
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 416
              }
            }),
            _react3.default.createElement(
              _nativeBase.Text,
              { style: _styles2.default.bedroomCount, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 423
                }
              },
              data.name
            )
          ),
          _react3.default.createElement(_Entypo2.default, { name: 'home', style: _styles2.default.confirmationViewIcon2, __source: {
              fileName: _jsxFileName,
              lineNumber: 425
            }
          })
        ) : data.type == "5" ? _react3.default.createElement(
          _reactNative.View,
          { key: data.id, __source: {
              fileName: _jsxFileName,
              lineNumber: 426
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            { style: { flexDirection: 'row', padding: 15 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 427
              }
            },
            _react3.default.createElement(
              _nativeBase.Text,
              { style: { flex: 1 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 428
                }
              },
              'Insert Photo'
            ),
            _react3.default.createElement(
              _reactNative.TouchableOpacity,
              { onPress: function onPress() {
                  return _this5.uploadPhoto();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 431
                }
              },
              _react3.default.createElement(_FontAwesome2.default, { name: 'camera', style: { fontSize: 16 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 432
                }
              })
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            { style: _styles2.default.imagesSliderWarp, __source: {
                fileName: _jsxFileName,
                lineNumber: 435
              }
            },
            _react3.default.createElement(_reactNative.FlatList, {
              data: _this5.state.sliderData,
              renderItem: function renderItem(_ref) {
                var item = _ref.item;
                return _react3.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 439
                    }
                  },
                  _react3.default.createElement(_reactNative.Image, { key: item.key, source: { uri: item.src }, style: _styles2.default.imagesSliderImage, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 440
                    }
                  })
                );
              },
              horizontal: true,
              style: _styles2.default.imagesSliderFlatList,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 436
              }
            })
          )
        ) : _react3.default.createElement(
          _reactNative.View,
          { key: data.id, __source: {
              fileName: _jsxFileName,
              lineNumber: 447
            }
          },
          _react3.default.createElement(
            _nativeBase.Item,
            { style: _styles2.default.confirmationItem, __source: {
                fileName: _jsxFileName,
                lineNumber: 448
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: _styles2.default.confirmationIconView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 449
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 450
                  }
                },
                data.image ? _react3.default.createElement(_reactNative.Image, { source: { uri: data.image }, style: { width: 20, height: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 453
                  }
                }) : _react3.default.createElement(_reactNative.Image, { source: logo22, style: { height: 20, width: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 455
                  }
                })
              )
            ),
            _react3.default.createElement(
              _nativeBase.Text,
              { style: _styles2.default.confirmationMainTxt, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 460
                }
              },
              data.name
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: { flex: 1, alignItems: 'center', justifyContent: 'center', marginRight: 15 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 461
                }
              },
              _react3.default.createElement(
                _reactNative.View,
                { style: { borderRadius: 10, borderWidth: 1, borderColor: "#ccc", flexDirection: 'row', overflow: 'hidden' }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 462
                  }
                },
                data.answers.map(function (data1, key1) {
                  return _react3.default.createElement(
                    _reactNative.View,
                    { key: data1.id, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 466
                      }
                    },
                    _react3.default.createElement(
                      _reactNative.TouchableOpacity,
                      { style: [{ paddingRight: 10, paddingLeft: 10, paddingTop: 3, paddingBottom: 4, borderTopLeftRadius: 10, borderBottomLeftRadius: 10 }, [data1.selected ? { backgroundColor: '#ccc' } : {}]], onPress: function onPress() {
                          return _this5.changeActiveRadio(data1);
                        }, __source: {
                          fileName: _jsxFileName,
                          lineNumber: 467
                        }
                      },
                      _react3.default.createElement(
                        _nativeBase.Text,
                        { style: [[data1.selected ? { color: '#fff' } : {}]], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 470
                          }
                        },
                        data1.title
                      )
                    )
                  );
                })
              )
            )
          )
        );
      });
      return _react3.default.createElement(
        _nativeBase.Container,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 515
          }
        },
        _react3.default.createElement(_reactNative.StatusBar, {
          backgroundColor: '#cbf0ed',
          __source: {
            fileName: _jsxFileName,
            lineNumber: 516
          }
        }),
        _react3.default.createElement(_reactNativeLoadingSpinnerOverlay2.default, { visible: this.props.service.busy || this.state.IsSpinnerVisible, textContent: 'Loading...', textStyle: { color: '#FFF' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 519
          }
        }),
        _react3.default.createElement(
          _nativeBase.Header,
          { style: _styles2.default.appHdr2, androidStatusBarColor: '#cbf0ed', noShadow: true, __source: {
              fileName: _jsxFileName,
              lineNumber: 520
            }
          },
          _react3.default.createElement(
            _nativeBase.Button,
            { transparent: true, onPress: function onPress() {
                return _this5.props.navigation.goBack();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 521
              }
            },
            _react3.default.createElement(_SimpleLineIcons2.default, { name: 'grid', style: _styles2.default.hd_lft_icon, __source: {
                fileName: _jsxFileName,
                lineNumber: 522
              }
            })
          ),
          _react3.default.createElement(
            _nativeBase.Body,
            { style: _styles2.default.appHdr2Bdy, __source: {
                fileName: _jsxFileName,
                lineNumber: 524
              }
            },
            _react3.default.createElement(
              _nativeBase.Title,
              { style: _styles2.default.appHdr2Txt, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 525
                }
              },
              'Service Details'
            )
          ),
          this.props.service.data.features ? _react3.default.createElement(
            _nativeBase.Button,
            { transparent: true, onPress: function onPress() {
                return _this5.props.navigation.navigate('Expect');
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 532
              }
            },
            _react3.default.createElement(_Ionicons2.default, { name: 'ios-information-circle', style: _styles2.default.hd_rt_icon, __source: {
                fileName: _jsxFileName,
                lineNumber: 533
              }
            })
          ) : _react3.default.createElement(_reactNative.View, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 536
            }
          })
        ),
        _react3.default.createElement(
          _nativeBase.Content,
          { style: { flex: 1, backgroundColor: '#fff' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 540
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            { style: { flex: 1, flexDirection: 'row' }, __source: {
                fileName: _jsxFileName,
                lineNumber: 541
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: { flex: 1, flexDirection: 'row', position: 'relative' }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 542
                }
              },
              this.state.cover_image ? _react3.default.createElement(_reactNative.Image, { source: { uri: this.state.cover_image }, style: _styles2.default.carveImage, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 547
                }
              }) : _react3.default.createElement(_reactNative.Image, { source: carveImage, style: _styles2.default.carveImage, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 549
                }
              })
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            { style: { flex: 1, flexDirection: 'row', marginTop: -40 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 554
              }
            },
            _react3.default.createElement(_reactNative.Image, { source: img17, style: { width: deviceWidth, height: 50 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 555
              }
            })
          ),
          _react3.default.createElement(
            _reactNative.View,
            { style: { flex: 1, alignItems: 'flex-end', justifyContent: 'center', marginBottom: 15, marginRight: 15 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 558
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 559
                }
              },
              _react3.default.createElement(
                _reactNative.View,
                { style: { flex: 1, flexDirection: 'row', marginTop: -40, justifyContent: 'flex-end', marginRight: 20 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 560
                  }
                },
                this.state.banner_image ? _react3.default.createElement(_reactNative.Image, { source: { uri: this.state.banner_image }, style: { width: 50, height: 50 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 564
                  }
                }) : _react3.default.createElement(_reactNative.Image, { source: img18, style: { width: 50, height: 50 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 566
                  }
                })
              ),
              _react3.default.createElement(
                _nativeBase.Text,
                { style: { color: '#1e3768' }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 570
                  }
                },
                this.state.serviceName
              )
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 593
              }
            },
            this.state.questionList.length > 0 ? questionList : _react3.default.createElement(
              _reactNative.View,
              { style: { flex: 1, alignItems: 'center' }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 599
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 599
                  }
                },
                'No questions found.'
              )
            )
          )
        ),
        this.state.questionList.length > 0 ? _react3.default.createElement(
          _nativeBase.Footer,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 657
            }
          },
          _react3.default.createElement(
            _nativeBase.FooterTab,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 658
              }
            },
            _react3.default.createElement(
              _reactNative.TouchableOpacity,
              { style: _styles2.default.confirmationServicefooterItem, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 659
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                { style: _styles2.default.confirmationServicefooterItmTxt, onPress: function onPress() {
                    return _this5.props.navigation.navigate('Confirmation');
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 659
                  }
                },
                'CONTINUE'
              )
            ),
            _react3.default.createElement(
              _reactNative.TouchableOpacity,
              { style: _styles2.default.confirmationServicefooterItem2, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 660
                }
              },
              _react3.default.createElement(
                _nativeBase.Text,
                { style: _styles2.default.confirmationServicefooterItmTxt, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 660
                  }
                },
                'AED ',
                this.props.service.data.price
              )
            )
          )
        ) : _react3.default.createElement(_reactNative.View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 664
          }
        })
      );
    }
  }]);

  return serviceDetails;
}(_react2.Component));

serviceDetails.propTypes = {
  auth: _propTypes2.default.object.isRequired
};
var mapStateToProps = function mapStateToProps(state) {
  return {
    auth: state.auth,
    service: state.service
  };
};
var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    getQuestionListByServiceId: function getQuestionListByServiceId(data) {
      return dispatch((0, _serviceActions.getQuestionListByServiceId)(data));
    },
    setServiceDetails: function setServiceDetails(data) {
      return dispatch((0, _serviceActions.setServiceDetails)(data));
    }
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(serviceDetails);